## nginx configuration
## Ref: https://github.com/kubernetes/ingress/blob/master/controllers/nginx/configuration.md
##
controller:
  ingressClass: nginx-controller
  publishService:
    enabled: true
  metrics:
    enabled: true

  service:
    annotations:
        # service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
        # service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: '3600'
        # service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: 'true'
        # service.beta.kubernetes.io/aws-load-balancer-ssl-ports: https
        # service.beta.kubernetes.io/aws-load-balancer-type: elb
      # service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
      # # service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: "*"
      # service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: 'true'
      # service.beta.kubernetes.io/aws-load-balancer-ssl-ports: https
      # service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: '3600'
      # service.beta.kubernetes.io/aws-load-balancer-type: elb


      # the backend instances are HTTP/HTTPS/TCP so let Nginx do that
      service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
      service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: "*"
      # Map port 443
      service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
      # Increase the ELB idle timeout to avoid issues with WebSockets or Server-Sent Events.
      service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: '3600'

    targetPorts:
      https: http
    type: LoadBalancer

  extraVolumeMounts:
  ## Additional volumeMounts to the controller main container.
   - name: cache
     mountPath: /cache/nginx
   - name: mattermost-cache
     mountPath: /cache/mattermost

  extraVolumes:
  ## Additional volumes to the controller pod.
   - name: cache
     emptyDir: {}
   - name: mattermost-cache
     emptyDir: {}

  config:
    http-snippet: |
      proxy_cache_path /cache/nginx levels=1:2 keys_zone=mattermost_test_cache:10m max_size=10g inactive=120m use_temp_path=off;
      proxy_cache_path /cache/mattermost levels=1:2 keys_zone=mattermost_cache:10m max_size=10g inactive=120m use_temp_path=off;
    server-tokens: "false"
    keep-alive: "3600"
    proxy-max-temp-file-size: "0"
    # real-ip-header: "proxy_protocol"
    # set-real-ip-from: "0.0.0.0/0"
    # force-ssl-redirect: "false"
    # use-forwarded-headers: 'true'
    # use-proxy-protocol: "true"
    # proxy-read-timeout: "3600"
    # proxy-send-timeout: "3600"

    use-proxy-protocol: "true"
    real-ip-header: "proxy_protocol"
    set-real-ip-from: "0.0.0.0/0"
    proxy-read-timeout: "3600"
    proxy-send-timeout: "3600"
    use-forwarded-headers: "true"
    force-ssl-redirect: "false"

  resources:
   limits:
     cpu: 1000m
     memory: 500Mi
   requests:
     cpu: 500m
     memory: 250Mi

  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 8
    targetCPUUtilizationPercentage: 150
    targetMemoryUtilizationPercentage: 150

defaultBackend:
  enabled: true
  replicaCount: 2
